parameters:
- name: environment 
  displayName: environment # Human-readable name for the parameter.
  type: string
  default: dev  #| parameters | [ parameters ]
  values: #
    - dev
    - prod
variables:
    workingDirectory: '$(System.DefaultWorkingDirectory)/environment/dev'
pool: karishma
trigger:
  # batch: true
  # branches:
  #   include: 
  #     - dev
  #   exclude: 
  #     - prod 
  #     - qa
  #     - uat
stages:
- stage: TerraformInitandPlanStage
  displayName: terraform init and plan 
  jobs: 
  - job: TerraformInitandPlan
    displayName: terraform init and plan
    steps: 
    - task: TerraformTaskV4@4
      inputs:
        provider: 'azurerm'
        command: 'init'
        workingDirectory: '$(workingDirectory)'
        backendServiceArm: 'my connection'
        backendAzureRmResourceGroupName: 'skdmp'
        backendAzureRmStorageAccountName: 'skdmpstg'
        backendAzureRmContainerName: 'azcontainer'
        backendAzureRmKey: 'tf/terraform.tfstate'
    - task: TerraformTaskV4@4
      inputs:
        provider: 'azurerm'
        command: 'plan'
        workingDirectory: '$(workingDirectory)'
        environmentServiceNameAzureRM: 'my connection'
- stage: TerraformApply
  displayName: terraform apply
  condition: and(succeeded(), eq(variables['Build.SourceBranchName'], 'master'))
  jobs: 
  - job: Validationc
    displayName: validation
    pool: server
    steps:  
    - task: ManualValidation@1
      inputs:
        notifyUsers: 'abcd@abc.com'       
  - job: TerraformApply
    displayName: terraform apply
    dependsOn: validation
    steps: 
    - task: TerraformTaskV4@4
      inputs:
        provider: 'azurerm'
        command: 'init'
        workingDirectory: '$(workingDirectory)'
        backendServiceArm: 'my connection'
        backendAzureRmResourceGroupName: 'skdmp'
        backendAzureRmStorageAccountName: 'skdmpstg'
        backendAzureRmContainerName: 'azcontainer'
        backendAzureRmKey: 'tf/terraform.tfstate'
    - task: TerraformTaskV4@4
      inputs:
        provider: 'azurerm'
        command: 'apply'

        workingDirectory: '$(workingDirectory)'
        environmentServiceNameAzureRM: 'my connection'